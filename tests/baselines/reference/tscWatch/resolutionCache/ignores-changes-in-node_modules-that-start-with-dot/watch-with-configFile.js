Input::
//// [/a/lib/lib.d.ts]
/// <reference no-default-lib="true"/>
interface Boolean {}
interface Function {}
interface CallableFunction {}
interface NewableFunction {}
interface IArguments {}
interface Number { toExponential: any; }
interface Object {}
interface RegExp {}
interface String { charAt: any; }
interface Array<T> { length: number; [n: number]: T; }

//// [/user/username/projects/myproject/test.ts]
import { x } from "somemodule";

//// [/user/username/projects/myproject/node_modules/somemodule/index.d.ts]
export const x = 10;

//// [/user/username/projects/myproject/tsconfig.json]
{}


fileExists:: {} 

directoryExists:: {} 

getModifiedTimes:: {} 

setModifiedTimes:: {} 

/a/lib/tsc.js --w -p /user/username/projects/myproject/tsconfig.json
Output::
>> Screen clear
[[90m12:00:27 AM[0m] Starting compilation in watch mode...

[[90m12:00:30 AM[0m] Found 0 errors. Watching for file changes.



Program root files: ["/user/username/projects/myproject/test.ts"]
Program options: {"watch":true,"project":"/user/username/projects/myproject/tsconfig.json","configFilePath":"/user/username/projects/myproject/tsconfig.json"}
Program structureReused: Not
Program files::
/a/lib/lib.d.ts
/user/username/projects/myproject/node_modules/somemodule/index.d.ts
/user/username/projects/myproject/test.ts

Semantic diagnostics in builder refreshed for::
/a/lib/lib.d.ts
/user/username/projects/myproject/node_modules/somemodule/index.d.ts
/user/username/projects/myproject/test.ts

Shape signatures in builder refreshed for::
/a/lib/lib.d.ts (used version)
/user/username/projects/myproject/node_modules/somemodule/index.d.ts (used version)
/user/username/projects/myproject/test.ts (used version)

WatchedFiles::
/user/username/projects/myproject/tsconfig.json:
  {"fileName":"/user/username/projects/myproject/tsconfig.json","pollingInterval":250}
/user/username/projects/myproject/test.ts:
  {"fileName":"/user/username/projects/myproject/test.ts","pollingInterval":250}
/user/username/projects/myproject/node_modules/somemodule/index.d.ts:
  {"fileName":"/user/username/projects/myproject/node_modules/somemodule/index.d.ts","pollingInterval":250}
/a/lib/lib.d.ts:
  {"fileName":"/a/lib/lib.d.ts","pollingInterval":250}
/user/username/projects/myproject/node_modules/somemodule/package.json:
  {"fileName":"/user/username/projects/myproject/node_modules/somemodule/package.json","pollingInterval":250}

FsWatches::

FsWatchesRecursive::
/user/username/projects/myproject/node_modules:
  {"directoryName":"/user/username/projects/myproject/node_modules","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}
/user/username/projects/myproject/node_modules/@types:
  {"directoryName":"/user/username/projects/myproject/node_modules/@types","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}
/user/username/projects/myproject:
  {"directoryName":"/user/username/projects/myproject","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}

exitCode:: ExitStatus.undefined

//// [/user/username/projects/myproject/test.js]
"use strict";
exports.__esModule = true;



fileExists:: {
 "/user/username/projects/myproject/tsconfig.json": 1,
 "/user/username/projects/myproject/node_modules/somemodule/package.json": 1,
 "/user/username/projects/myproject/node_modules/somemodule.ts": 1,
 "/user/username/projects/myproject/node_modules/somemodule.tsx": 1,
 "/user/username/projects/myproject/node_modules/somemodule.d.ts": 1,
 "/user/username/projects/myproject/node_modules/somemodule/index.ts": 1,
 "/user/username/projects/myproject/node_modules/somemodule/index.tsx": 1,
 "/user/username/projects/myproject/node_modules/somemodule/index.d.ts": 2
} 

directoryExists:: {
 "/user/username/projects/myproject/tsconfig.json": 1,
 "/user/username/projects/myproject/node_modules": 2,
 "/user/username/projects/myproject/node_modules/somemodule": 3,
 "/user/username/projects/myproject/node_modules/@types": 1,
 "/user/username/projects/node_modules/@types": 1,
 "/user/username/node_modules/@types": 1,
 "/user/node_modules/@types": 1,
 "/node_modules/@types": 1
} 

getModifiedTimes:: {} 

setModifiedTimes:: {} 

Change:: npm install file and folder that start with '.'

Input::
//// [/user/username/projects/myproject/node_modules/.cache/babel-loader/89c02171edab901b9926470ba6d5677e.ts]
{"something":10}


fileExists:: {} 

directoryExists:: {} 

getModifiedTimes:: {} 

setModifiedTimes:: {} 

Output::

WatchedFiles::
/user/username/projects/myproject/tsconfig.json:
  {"fileName":"/user/username/projects/myproject/tsconfig.json","pollingInterval":250}
/user/username/projects/myproject/test.ts:
  {"fileName":"/user/username/projects/myproject/test.ts","pollingInterval":250}
/user/username/projects/myproject/node_modules/somemodule/index.d.ts:
  {"fileName":"/user/username/projects/myproject/node_modules/somemodule/index.d.ts","pollingInterval":250}
/a/lib/lib.d.ts:
  {"fileName":"/a/lib/lib.d.ts","pollingInterval":250}
/user/username/projects/myproject/node_modules/somemodule/package.json:
  {"fileName":"/user/username/projects/myproject/node_modules/somemodule/package.json","pollingInterval":250}

FsWatches::

FsWatchesRecursive::
/user/username/projects/myproject/node_modules:
  {"directoryName":"/user/username/projects/myproject/node_modules","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}
/user/username/projects/myproject/node_modules/@types:
  {"directoryName":"/user/username/projects/myproject/node_modules/@types","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}
/user/username/projects/myproject:
  {"directoryName":"/user/username/projects/myproject","fallbackPollingInterval":500,"fallbackOptions":{"watchFile":"PriorityPollingInterval"}}

exitCode:: ExitStatus.undefined


fileExists:: {} 

directoryExists:: {} 

getModifiedTimes:: {} 

setModifiedTimes:: {} 
